apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'
apply plugin: 'com.google.gms.google-services'

jacoco {
    toolVersion = '0.7.1.201405082137'
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.simplemobiletools.camera"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 64
        versionName "5.0.0"
        setProperty("archivesBaseName", "camera")
        //testInstrumentationRunner = 'android.support.test.runner.AndroidJUnitRunner'
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"

            /** For Jacoco test coverage */
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            /** For Jacoco test coverage */
            testCoverageEnabled true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        unitTests.all {
            jvmArgs '-noverify'
        }

    }
}

dependencies {
    // Older version of kotlin = 1.0.6, then 1.2.71
    implementation 'com.simplemobiletools:commons:5.1.4'
    testImplementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.0'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.3.0'
    testImplementation "com.nhaarman:mockito-kotlin:1.1.0"
    testImplementation 'org.amshove.kluent:kluent:1.14'
    testImplementation 'org.robolectric:robolectric:4.1'
    testImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-ml-vision:19.0.3'
    implementation 'com.google.zxing:core:3.2.1'

}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith('test') || !sourceSet.name.startsWith('androidTest')) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

allprojects {
    apply from: "$rootDir/ktlint.gradle"

}

Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('KEY_ALIAS') && props.containsKey('PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}


task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/kotlin"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

apply plugin: 'com.google.gms.google-services'
